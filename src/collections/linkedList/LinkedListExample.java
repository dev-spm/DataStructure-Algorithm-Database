package collections.linkedList;import java.util.Arrays;import java.util.LinkedList;import java.util.List;/** * Underlying data structure is Doubly Linked list * Insertion order preserved, duplicate allowed, null insertion allowed, heterogeneous data can be stored * Not threadsafe * Best choice if insert or delete element at midddle * The Worst choice if retrieve * It is used for FIFO or LIFO - collectionsExample.stack or queue * <p> * Void addFirst(); * Void addLast(); * Object getFirst(); * Object getLast(); * Object removeFirst(); * Object removeLast(); */public class LinkedListExample {    LinkedList<Integer> linnkedList = new LinkedList<>();    public static void main(String[] args) {        List<Integer> numbersList = new LinkedList<>();        numbersList.add(1);        numbersList.add(2);        numbersList.add(3);        numbersList.add(4);        numbersList.add(5);        Integer[] numbers = new Integer[numbersList.size()];        numbers = numbersList.toArray(numbers);        System.out.println(Arrays.toString(numbers));    }}